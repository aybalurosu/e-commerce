// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model Product {
	id       	Int    	 	@id @default(autoincrement())
	name     	String 	 	@db.VarChar(50)
	sku		  	String 	 	@db.VarChar(50) @unique
	image    	String 	 	@db.VarChar(150)
	descrip  	String 	 	@db.VarChar(100)
	brand  	 	String 	 	@db.VarChar(50)
	price 	 	Decimal  	@db.Decimal(10,2)
	is_new      Boolean

	discount_id Int?   		  
	discount    Discount? 	@relation(fields: [discount_id], references: [id])

	category_id Int			
	category	Category	@relation(fields: [category_id], references: [id])

	stock		Stock[]
	order_item	OrderItem[]

	cart_item	CartItem[]
	wish_item	WishItem[]
	
	createdAt DateTime 		@default(now())
	updatedAt DateTime 	 	@updatedAt
}

model Discount {
	id 				  Int 	 	@id @default(autoincrement())
	descript		  String 	@db.VarChar(100)
	discount_percent  Int 
	active 			  Boolean

	product          Product[]
}

model Category {
	id 			Int 		@id @default(autoincrement())
	name 		String 		@db.VarChar(50)
	descrip		String 		@db.VarChar(100)

	parent_id   Int?	
	parent 		Category? 	@relation("CategoryHierarchy", fields: [parent_id], references: [id])
	children	Category[]	@relation("CategoryHierarchy")

	product 	Product[]
}

model Stock {
	id 				Int 		@id @default(autoincrement())
	quantity		Int
	
	product_id 		Int   		  
	product    		Product 	@relation(fields: [product_id], references: [id])

	warehouse_id 	Int			
	warehouse		Warehouse	@relation(fields: [warehouse_id], references: [id])
}

model Warehouse {
	id 			Int 	@id @default(autoincrement())
	name 		String 	@db.VarChar(50)
	address		String 	@db.VarChar(100)
	city   		String 	@db.VarChar(50)
	country   	String 	@db.VarChar(50)
	phone   	String 	@db.Char(9)    @unique

	stock		Stock[]
}

model OrderItem {
	id 			Int 		@id @default(autoincrement())
	quantity	Int

	order_id 	Int 		
	order		Order		@relation(fields: [order_id], references: [id])

	product_id	Int			
	product		Product		@relation(fields: [product_id], references: [id])
}	

model Order {
	id 			Int 		@id @default(autoincrement())
	date 		DateTime
	status		String		@db.VarChar(50)
	total		Decimal		@db.Decimal(10,2)

	payment_id 	Int			
	payment 	Payment		@relation(fields: [payment_id], references: [id])

	customer_id	Int			
	customer 	Customer	@relation(fields: [customer_id], references: [id])

	order_item	OrderItem[]
}

model Payment {
	id 					Int 		@id @default(autoincrement())
	amount 				Decimal		@db.Decimal(10,2)
	status				String		@db.VarChar(50)
	payment_method		String		@db.VarChar(50)
	currency			String		@db.VarChar(50)

	order				Order
}

model Customer {
	id 					Int 		@id @default(autoincrement())
	first_name 			String		@db.VarChar(50)
	last_name			String		@db.VarChar(50)
	email				String		@db.VarChar(100) @unique
	password			String		@db.VarChar(50)
	phone				String		@db.Char(9)      @unique

	order				Order[]
	customer_address	CustomerAddress[]
	cart_list			CartList
	wish_list			WishList[]
}

model CustomerAddress {
	id 					Int 		@id @default(autoincrement())
	address 			String		@db.VarChar(50)
	postal_code			String		@db.VarChar(50)
	city				String		@db.VarChar(100)
	country				String		@db.VarChar(50)

	customer_id			Int			
	customer 			Customer	@relation(fields: [customer_id], references: [id])
}

model CartList {
	id 					Int 		@id @default(autoincrement())

	customer_id			Int			@unique
	customer 			Customer	@relation(fields: [customer_id], references: [id])

	cart_item			CartItem[]
}


model CartItem {
	id 					Int 		@id @default(autoincrement())
	quantity			Int		
	unit_price			Decimal		@db.Decimal(10,2)

	cart_id				Int			
	cart_list			CartList	@relation(fields: [cart_id], references: [id])

	product_id			Int			
	product 			Product		@relation(fields: [product_id], references: [id])
}


model WishList {
	id 					Int 		@id @default(autoincrement())
	name				String		@db.VarChar(50)

	customer_id			Int			
	customer 			Customer	@relation(fields: [customer_id], references: [id])

	wish_item			WishItem[]
}


model WishItem {
	id 					Int 		@id @default(autoincrement())

	wish_id				Int
	wish_list			WishList	@relation(fields: [wish_id], references: [id])

	product_id			Int			
	product 			Product		@relation(fields: [product_id], references: [id])
}
