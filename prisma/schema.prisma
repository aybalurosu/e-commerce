// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model Product {
	id       	Int    	 	@id @default(autoincrement())
	name     	String 	 	@db.VarChar(50)
	sku		  	String 	 	@db.VarChar(50) @unique
	image    	String 	 	@db.VarChar(150)
	descrip  	String 	 	@db.VarChar(100)
	brand  	 	String 	 	@db.VarChar(50)
	price 	 	Decimal  	@db.Decimal(10,2)
	isNew      Boolean

	discount    Discount? 	@relation(fields: [discountId], references: [id])
	discountId 	Int?   		  

	category	Category	@relation(fields: [categoryId], references: [id])
	categoryId 	Int			

	stock		Stock[]
	orderItem	OrderItem[]

	cartItem	CartItem[]
	wishItem	WishItem[]
	
	createdAt 	DateTime 	@default(now())
	updatedAt 	DateTime 	 @updatedAt
}

model Discount {
	id 				  Int 	 	@id @default(autoincrement())
	descript		  String 	@db.VarChar(100)
	discountPercent   Int 
	active 			  Boolean

	product          Product[]

	createdAt DateTime 		@default(now())
	updatedAt DateTime 	 	@updatedAt
}

model Category {
	id 			Int 		@id @default(autoincrement())
	name 		String 		@db.VarChar(50)
	descrip		String 		@db.VarChar(100)

		
	parent 		Category? 	@relation(name: "SubCategory", fields: [parentId], references: [id])
	parentId   	Int?

	subcategory	Category[]	@relation(name: "SubCategory")

	product 	Product[]

	createdAt 	DateTime 	@default(now())
	updatedAt 	DateTime 	@updatedAt
}

model Stock {
	id 				Int 		@id @default(autoincrement())
	quantity		Int
	   		  
	product    		Product 	@relation(fields: [productId], references: [id])
	productId 		Int

	warehouse		Warehouse	@relation(fields: [warehouseId], references: [id])
	warehouseId 	Int			

	createdAt 		DateTime 	@default(now())
	updatedAt 		DateTime 	@updatedAt
}

model Warehouse {
	id 			Int 	@id @default(autoincrement())
	name 		String 	@db.VarChar(50)
	address		String 	@db.VarChar(100)
	city   		String 	@db.VarChar(50)
	country   	String 	@db.VarChar(50)
	phone   	String 	@db.Char(9)    @unique

	stock		Stock[]

	createdAt DateTime 		@default(now())
	updatedAt DateTime 	 	@updatedAt
}

model OrderItem {
	id 			Int 		@id @default(autoincrement())
	quantity	Int

	order		Order		@relation(fields: [orderId], references: [id])
	orderId 	Int 		

	product		Product		@relation(fields: [productId], references: [id])
	productId	Int			

	createdAt DateTime 		@default(now())
	updatedAt DateTime 	 	@updatedAt
}	

model Payment {
	id 					Int 		@id @default(autoincrement())
	amount 				Decimal		@db.Decimal(10,2)
	status				String		@db.VarChar(50)
	paymentMethod		String		@db.VarChar(50)
	currency			String		@db.VarChar(50)

	order				Order		@relation(fields: [orderId], references: [id])
	orderId				Int 		@unique

	createdAt 			DateTime 	@default(now())
	updatedAt 			DateTime 	@updatedAt
}

model Order {
	id 			Int 		@id @default(autoincrement())
	date 		DateTime
	status		String		@db.VarChar(50)
	total		Decimal		@db.Decimal(10,2)

	payment 	Payment?		
			
	customer 	Customer	@relation(fields: [customerId], references: [id])
	customerId	Int

	orderItem	OrderItem[]

	createdAt	DateTime 	@default(now())
	updatedAt 	DateTime 	@updatedAt
}

model Customer {
	id 					Int 		@id @default(autoincrement())
	firstName 			String		@db.VarChar(50)
	lastName			String		@db.VarChar(50)
	email				String		@db.VarChar(100) @unique
	password			String		@db.VarChar(50)
	phone				String		@db.Char(9)      @unique

	order				Order[]
	customerAddress		CustomerAddress[]
	cartList			CartList?	
	wishList			WishList[]

	createdAt 			DateTime 	@default(now())
	updatedAt 			DateTime 	@updatedAt
}

model CustomerAddress {
	id 					Int 		@id @default(autoincrement())
	address 			String		@db.VarChar(50)
	postalCode			String		@db.VarChar(50)
	city				String		@db.VarChar(100)
	country				String		@db.VarChar(50)

	customer 			Customer	@relation(fields: [customerId], references: [id])
	customerId			Int			

	createdAt DateTime 		@default(now())
	updatedAt DateTime 	 	@updatedAt
}

model CartList {
	id 					Int 		@id @default(autoincrement())

	customer 			Customer	@relation(fields: [customerId], references: [id])
	customerId			Int			@unique

	cartItem			CartItem[]

	createdAt DateTime 		@default(now())
	updatedAt DateTime 	 	@updatedAt
}

model CartItem {
	id 					Int 		@id @default(autoincrement())
	quantity			Int		
	unitPrice			Decimal		@db.Decimal(10,2)

	cartList			CartList	@relation(fields: [cartId], references: [id])
	cartId				Int			
			
	product 			Product		@relation(fields: [productId], references: [id])
	productId			Int

	createdAt DateTime 		@default(now())
	updatedAt DateTime 	 	@updatedAt
}


model WishList {
	id 					Int 		@id @default(autoincrement())
	name				String		@db.VarChar(50)

	customer 			Customer	@relation(fields: [customerId], references: [id])
	customerId			Int			

	wishItem			WishItem[]

	createdAt DateTime 		@default(now())
	updatedAt DateTime 	 	@updatedAt
}


model WishItem {
	id 					Int 		@id @default(autoincrement())

	wishList			WishList	@relation(fields: [wishId], references: [id])
	wishId				Int

	product 			Product		@relation(fields: [productId], references: [id])
	productId			Int			

	createdAt DateTime 		@default(now())
	updatedAt DateTime 	 	@updatedAt
}
